{"ast":null,"code":"import axios from 'axios';\nimport JsonData from './FullData.json';\n\n/************************************ ADD Likes ************************************/\nconst addToLikes = async (user, player) => {\n  if (!user || !player) {\n    console.error('User or player data is missing');\n    alert('Failed to add player to likes: user or player data is missing');\n    return;\n  }\n  const playerData = {\n    user_id: user.fullName,\n    player_id: player.id\n  };\n  try {\n    await axios.post('/api/like', playerData, {\n      headers: {\n        Authorization: `Bearer ${user.token}`\n      }\n    });\n    alert('Player added to likes successfully!');\n  } catch (error) {\n    console.error('Error adding player to likes:', error);\n    alert('Failed to add player to likes.');\n  }\n};\n\n/************************************ Remove Likes ************************************/\nconst removeFromLikes = async (user, player, onRemove) => {\n  if (!user || !player) {\n    console.error('User or player data is missing');\n    alert('Failed to remove player from likes: user or player data is missing');\n    return;\n  }\n  try {\n    await axios.delete(`/api/like/${player.id}`, {\n      headers: {\n        Authorization: `Bearer ${user.token}`\n      },\n      data: {\n        user_id: user.fullName\n      }\n    });\n    if (typeof onRemove === 'function') {\n      onRemove(player.id);\n    }\n    alert('Player removed from likes successfully!');\n  } catch (error) {\n    console.error('Error removing player from likes:', error);\n    alert('Failed to remove player from likes.');\n  }\n};\n\n/************************************ Remove Basket ************************************/\nconst removeFromBasket = async (user, player, onRemove) => {\n  if (!user || !player) {\n    console.error('User or player data is missing');\n    alert('Failed to remove player from basket: user or player data is missing');\n    return;\n  }\n  try {\n    await axios.delete(`/api/basket/${player.id}`, {\n      headers: {\n        Authorization: `Bearer ${user.token}`\n      },\n      data: {\n        user_id: user.fullName\n      }\n    });\n    if (typeof onRemove === 'function') {\n      onRemove(player.id);\n    }\n    alert('Player removed from basket successfully!');\n  } catch (error) {\n    console.error('Error removing player from basket:', error);\n    alert('Failed to remove player from basket.');\n  }\n};\n\n/************************************ Add Basket ************************************/\nconst addToBasket = async (user, player) => {\n  if (!user || !player) {\n    console.error('User or player data is missing');\n    alert('Failed to add player to basket: user or player data is missing');\n    return;\n  }\n  const playerData = {\n    user_id: user.fullName,\n    player_id: player.id\n  };\n  try {\n    await axios.post('/api/basket', playerData, {\n      headers: {\n        Authorization: `Bearer ${user.token}`\n      }\n    });\n    alert('Player added to basket successfully!');\n  } catch (error) {\n    console.error('Error adding player to basket:', error);\n    alert('Failed to add player to basket.');\n  }\n};\n\n/************************************ Fetch Like Players ************************************/\nconst fetchLikedPlayers = async user => {\n  if (!user) {\n    console.error('User data is missing');\n    throw new Error('User data is missing');\n  }\n  try {\n    const response = await axios.get('/api/like', {\n      headers: {\n        Authorization: `Bearer ${user.token}`\n      },\n      params: {\n        user_id: user.fullName\n      }\n    });\n    console.log('Response data:', response.data); // Add this line for debugging\n    const likedPlayerIds = response.data.likes.map(like => like.player_id);\n    const playersData = [];\n    Object.values(JsonData).forEach(conference => {\n      Object.values(conference).forEach(division => {\n        Object.values(division).forEach(team => {\n          team.forEach(player => {\n            if (likedPlayerIds.includes(player.id.toString())) {\n              playersData.push(player);\n            }\n          });\n        });\n      });\n    });\n    console.log('Liked players data:', playersData); // Add this line for debugging\n    return playersData;\n  } catch (error) {\n    console.error('Error fetching liked players:', error);\n    throw error;\n  }\n};\n\n/************************************ Fetch All Dream Team  ************************************/\nconst fetchAllDreamTeams = async user => {\n  if (!user) {\n    console.error('User data is missing');\n    throw new Error('User data is missing');\n  }\n  try {\n    const response = await axios.get('/api/dreamteam/all', {\n      headers: {\n        Authorization: `Bearer ${user.token}`\n      }\n    });\n    const dreamTeamsData = response.data;\n    const updatedDreamTeams = dreamTeamsData.map(team => {\n      const players = [];\n      Object.values(JsonData).forEach(conference => {\n        Object.values(conference).forEach(division => {\n          Object.values(division).forEach(teamData => {\n            teamData.forEach(player => {\n              if (team.player_ids.includes(player.id.toString())) {\n                players.push(player);\n              }\n            });\n          });\n        });\n      });\n      const avgPPG = (players.reduce((sum, player) => sum + player.ppg, 0) / players.length).toFixed(1);\n      const avgRPG = (players.reduce((sum, player) => sum + player.rpg, 0) / players.length).toFixed(1);\n      const avgAPG = (players.reduce((sum, player) => sum + player.apg, 0) / players.length).toFixed(1);\n      return {\n        ...team,\n        players,\n        avgPPG,\n        avgRPG,\n        avgAPG\n      };\n    });\n    const stats = {\n      bestPPG: Math.max(...updatedDreamTeams.map(team => parseFloat(team.avgPPG))),\n      worstPPG: Math.min(...updatedDreamTeams.map(team => parseFloat(team.avgPPG))),\n      bestRPG: Math.max(...updatedDreamTeams.map(team => parseFloat(team.avgRPG))),\n      worstRPG: Math.min(...updatedDreamTeams.map(team => parseFloat(team.avgRPG))),\n      bestAPG: Math.max(...updatedDreamTeams.map(team => parseFloat(team.avgAPG))),\n      worstAPG: Math.min(...updatedDreamTeams.map(team => parseFloat(team.avgAPG)))\n    };\n    return {\n      updatedDreamTeams,\n      bestStats: {\n        bestPPG: stats.bestPPG.toFixed(1),\n        bestRPG: stats.bestRPG.toFixed(1),\n        bestAPG: stats.bestAPG.toFixed(1)\n      },\n      worstStats: {\n        worstPPG: stats.worstPPG.toFixed(1),\n        worstRPG: stats.worstRPG.toFixed(1),\n        worstAPG: stats.worstAPG.toFixed(1)\n      }\n    };\n  } catch (error) {\n    console.error('Error fetching dream teams:', error);\n    throw error;\n  }\n};\n\n/************************************ Fetch My Dream Team ************************************/\nconst fetchMyDreamTeams = async user => {\n  if (!user) {\n    console.error('User data is missing');\n    throw new Error('User data is missing');\n  }\n  try {\n    const response = await axios.get('/api/dreamteam/', {\n      headers: {\n        Authorization: `Bearer ${user.token}`\n      },\n      params: {\n        user_id: user.fullName\n      }\n    });\n    const dreamTeamsData = response.data.dreamTeams;\n    const updatedDreamTeams = dreamTeamsData.map(team => {\n      const players = [];\n      Object.values(JsonData).forEach(conference => {\n        Object.values(conference).forEach(division => {\n          Object.values(division).forEach(teamData => {\n            teamData.forEach(player => {\n              if (team.player_ids.includes(player.id.toString())) {\n                players.push(player);\n              }\n            });\n          });\n        });\n      });\n      const avgPPG = (players.reduce((sum, player) => sum + player.ppg, 0) / players.length).toFixed(1);\n      const avgRPG = (players.reduce((sum, player) => sum + player.rpg, 0) / players.length).toFixed(1);\n      const avgAPG = (players.reduce((sum, player) => sum + player.apg, 0) / players.length).toFixed(1);\n      return {\n        ...team,\n        players,\n        avgPPG,\n        avgRPG,\n        avgAPG\n      };\n    });\n    const stats = {\n      bestPPG: Math.max(...updatedDreamTeams.map(team => parseFloat(team.avgPPG))),\n      worstPPG: Math.min(...updatedDreamTeams.map(team => parseFloat(team.avgPPG))),\n      bestRPG: Math.max(...updatedDreamTeams.map(team => parseFloat(team.avgRPG))),\n      worstRPG: Math.min(...updatedDreamTeams.map(team => parseFloat(team.avgRPG))),\n      bestAPG: Math.max(...updatedDreamTeams.map(team => parseFloat(team.avgAPG))),\n      worstAPG: Math.min(...updatedDreamTeams.map(team => parseFloat(team.avgAPG)))\n    };\n    return {\n      updatedDreamTeams,\n      bestStats: {\n        bestPPG: stats.bestPPG.toFixed(1),\n        bestRPG: stats.bestRPG.toFixed(1),\n        bestAPG: stats.bestAPG.toFixed(1)\n      },\n      worstStats: {\n        worstPPG: stats.worstPPG.toFixed(1),\n        worstRPG: stats.worstRPG.toFixed(1),\n        worstAPG: stats.worstAPG.toFixed(1)\n      }\n    };\n  } catch (error) {\n    console.error('Error fetching dream teams:', error);\n    throw error;\n  }\n};\n\n/************************************ Fetch Basket Players ************************************/\nconst fetchBasketPlayers = async user => {\n  if (!user) {\n    console.error('User data is missing');\n    throw new Error('User data is missing');\n  }\n  try {\n    const response = await axios.get('/api/basket', {\n      headers: {\n        Authorization: `Bearer ${user.token}`\n      },\n      params: {\n        user_id: user.fullName\n      }\n    });\n    const basketPlayerIds = response.data.baskets.map(basket => basket.player_id);\n    const playersData = [];\n    Object.values(JsonData).forEach(conference => {\n      Object.values(conference).forEach(division => {\n        Object.values(division).forEach(team => {\n          team.forEach(player => {\n            if (basketPlayerIds.includes(player.id.toString())) {\n              playersData.push(player);\n            }\n          });\n        });\n      });\n    });\n    return playersData;\n  } catch (error) {\n    console.error('Error fetching basket players:', error);\n    throw error;\n  }\n};\n\n/************************************ Create DreamTeam ************************************/\nconst createDreamTeam = async (user, playerIds) => {\n  if (!user || !playerIds) {\n    console.error('User or player IDs data is missing');\n    throw new Error('User or player IDs data is missing');\n  }\n  try {\n    await axios.post('/api/dreamteam/add', {\n      user_id: user.fullName,\n      player_ids: playerIds\n    }, {\n      headers: {\n        Authorization: `Bearer ${user.token}`\n      }\n    });\n    await axios.post('/api/basket/clear', {\n      user_id: user.fullName\n    }, {\n      headers: {\n        Authorization: `Bearer ${user.token}`\n      }\n    });\n    return 'Dream Team created successfully!';\n  } catch (error) {\n    console.error('Error creating Dream Team:', error);\n    throw error;\n  }\n};\nexport { addToLikes, removeFromLikes, removeFromBasket, addToBasket, fetchLikedPlayers, fetchAllDreamTeams, fetchMyDreamTeams, fetchBasketPlayers, createDreamTeam };","map":{"version":3,"names":["axios","JsonData","addToLikes","user","player","console","error","alert","playerData","user_id","fullName","player_id","id","post","headers","Authorization","token","removeFromLikes","onRemove","delete","data","removeFromBasket","addToBasket","fetchLikedPlayers","Error","response","get","params","log","likedPlayerIds","likes","map","like","playersData","Object","values","forEach","conference","division","team","includes","toString","push","fetchAllDreamTeams","dreamTeamsData","updatedDreamTeams","players","teamData","player_ids","avgPPG","reduce","sum","ppg","length","toFixed","avgRPG","rpg","avgAPG","apg","stats","bestPPG","Math","max","parseFloat","worstPPG","min","bestRPG","worstRPG","bestAPG","worstAPG","bestStats","worstStats","fetchMyDreamTeams","dreamTeams","fetchBasketPlayers","basketPlayerIds","baskets","basket","createDreamTeam","playerIds"],"sources":["/Users/omerpeled/Desktop/NBA-Android2 Deploy/Frontend/src/data/api.js"],"sourcesContent":["import axios from 'axios';\nimport JsonData from './FullData.json';\n\n/************************************ ADD Likes ************************************/\nconst addToLikes = async (user, player) => {\n  if (!user || !player) {\n    console.error('User or player data is missing');\n    alert('Failed to add player to likes: user or player data is missing');\n    return;\n  }\n\n  const playerData = {\n    user_id: user.fullName,\n    player_id: player.id,\n  };\n\n  try {\n    await axios.post('/api/like', playerData, {\n      headers: { Authorization: `Bearer ${user.token}` },\n    });\n    alert('Player added to likes successfully!');\n  } catch (error) {\n    console.error('Error adding player to likes:', error);\n    alert('Failed to add player to likes.');\n  }\n};\n\n/************************************ Remove Likes ************************************/\nconst removeFromLikes = async (user, player, onRemove) => {\n  if (!user || !player) {\n    console.error('User or player data is missing');\n    alert('Failed to remove player from likes: user or player data is missing');\n    return;\n  }\n\n  try {\n    await axios.delete(`/api/like/${player.id}`, {\n      headers: { Authorization: `Bearer ${user.token}` },\n      data: { user_id: user.fullName },\n    });\n    if (typeof onRemove === 'function') {\n      onRemove(player.id);\n    }\n    alert('Player removed from likes successfully!');\n  } catch (error) {\n    console.error('Error removing player from likes:', error);\n    alert('Failed to remove player from likes.');\n  }\n};\n\n/************************************ Remove Basket ************************************/\nconst removeFromBasket = async (user, player, onRemove) => {\n  if (!user || !player) {\n    console.error('User or player data is missing');\n    alert(\n      'Failed to remove player from basket: user or player data is missing'\n    );\n    return;\n  }\n\n  try {\n    await axios.delete(`/api/basket/${player.id}`, {\n      headers: { Authorization: `Bearer ${user.token}` },\n      data: { user_id: user.fullName },\n    });\n    if (typeof onRemove === 'function') {\n      onRemove(player.id);\n    }\n    alert('Player removed from basket successfully!');\n  } catch (error) {\n    console.error('Error removing player from basket:', error);\n    alert('Failed to remove player from basket.');\n  }\n};\n\n/************************************ Add Basket ************************************/\nconst addToBasket = async (user, player) => {\n  if (!user || !player) {\n    console.error('User or player data is missing');\n    alert('Failed to add player to basket: user or player data is missing');\n    return;\n  }\n\n  const playerData = {\n    user_id: user.fullName,\n    player_id: player.id,\n  };\n\n  try {\n    await axios.post('/api/basket', playerData, {\n      headers: { Authorization: `Bearer ${user.token}` },\n    });\n    alert('Player added to basket successfully!');\n  } catch (error) {\n    console.error('Error adding player to basket:', error);\n    alert('Failed to add player to basket.');\n  }\n};\n\n/************************************ Fetch Like Players ************************************/\nconst fetchLikedPlayers = async (user) => {\n  if (!user) {\n    console.error('User data is missing');\n    throw new Error('User data is missing');\n  }\n\n  try {\n    const response = await axios.get('/api/like', {\n      headers: { Authorization: `Bearer ${user.token}` },\n      params: { user_id: user.fullName },\n    });\n    console.log('Response data:', response.data); // Add this line for debugging\n    const likedPlayerIds = response.data.likes.map((like) => like.player_id);\n\n    const playersData = [];\n    Object.values(JsonData).forEach((conference) => {\n      Object.values(conference).forEach((division) => {\n        Object.values(division).forEach((team) => {\n          team.forEach((player) => {\n            if (likedPlayerIds.includes(player.id.toString())) {\n              playersData.push(player);\n            }\n          });\n        });\n      });\n    });\n\n    console.log('Liked players data:', playersData); // Add this line for debugging\n    return playersData;\n  } catch (error) {\n    console.error('Error fetching liked players:', error);\n    throw error;\n  }\n};\n\n/************************************ Fetch All Dream Team  ************************************/\nconst fetchAllDreamTeams = async (user) => {\n  if (!user) {\n    console.error('User data is missing');\n    throw new Error('User data is missing');\n  }\n\n  try {\n    const response = await axios.get('/api/dreamteam/all', {\n      headers: { Authorization: `Bearer ${user.token}` },\n    });\n    const dreamTeamsData = response.data;\n\n    const updatedDreamTeams = dreamTeamsData.map((team) => {\n      const players = [];\n      Object.values(JsonData).forEach((conference) => {\n        Object.values(conference).forEach((division) => {\n          Object.values(division).forEach((teamData) => {\n            teamData.forEach((player) => {\n              if (team.player_ids.includes(player.id.toString())) {\n                players.push(player);\n              }\n            });\n          });\n        });\n      });\n\n      const avgPPG = (\n        players.reduce((sum, player) => sum + player.ppg, 0) / players.length\n      ).toFixed(1);\n      const avgRPG = (\n        players.reduce((sum, player) => sum + player.rpg, 0) / players.length\n      ).toFixed(1);\n      const avgAPG = (\n        players.reduce((sum, player) => sum + player.apg, 0) / players.length\n      ).toFixed(1);\n\n      return { ...team, players, avgPPG, avgRPG, avgAPG };\n    });\n\n    const stats = {\n      bestPPG: Math.max(\n        ...updatedDreamTeams.map((team) => parseFloat(team.avgPPG))\n      ),\n      worstPPG: Math.min(\n        ...updatedDreamTeams.map((team) => parseFloat(team.avgPPG))\n      ),\n      bestRPG: Math.max(\n        ...updatedDreamTeams.map((team) => parseFloat(team.avgRPG))\n      ),\n      worstRPG: Math.min(\n        ...updatedDreamTeams.map((team) => parseFloat(team.avgRPG))\n      ),\n      bestAPG: Math.max(\n        ...updatedDreamTeams.map((team) => parseFloat(team.avgAPG))\n      ),\n      worstAPG: Math.min(\n        ...updatedDreamTeams.map((team) => parseFloat(team.avgAPG))\n      ),\n    };\n\n    return {\n      updatedDreamTeams,\n      bestStats: {\n        bestPPG: stats.bestPPG.toFixed(1),\n        bestRPG: stats.bestRPG.toFixed(1),\n        bestAPG: stats.bestAPG.toFixed(1),\n      },\n      worstStats: {\n        worstPPG: stats.worstPPG.toFixed(1),\n        worstRPG: stats.worstRPG.toFixed(1),\n        worstAPG: stats.worstAPG.toFixed(1),\n      },\n    };\n  } catch (error) {\n    console.error('Error fetching dream teams:', error);\n    throw error;\n  }\n};\n\n/************************************ Fetch My Dream Team ************************************/\nconst fetchMyDreamTeams = async (user) => {\n  if (!user) {\n    console.error('User data is missing');\n    throw new Error('User data is missing');\n  }\n\n  try {\n    const response = await axios.get('/api/dreamteam/', {\n      headers: { Authorization: `Bearer ${user.token}` },\n      params: { user_id: user.fullName },\n    });\n    const dreamTeamsData = response.data.dreamTeams;\n\n    const updatedDreamTeams = dreamTeamsData.map((team) => {\n      const players = [];\n      Object.values(JsonData).forEach((conference) => {\n        Object.values(conference).forEach((division) => {\n          Object.values(division).forEach((teamData) => {\n            teamData.forEach((player) => {\n              if (team.player_ids.includes(player.id.toString())) {\n                players.push(player);\n              }\n            });\n          });\n        });\n      });\n\n      const avgPPG = (\n        players.reduce((sum, player) => sum + player.ppg, 0) / players.length\n      ).toFixed(1);\n      const avgRPG = (\n        players.reduce((sum, player) => sum + player.rpg, 0) / players.length\n      ).toFixed(1);\n      const avgAPG = (\n        players.reduce((sum, player) => sum + player.apg, 0) / players.length\n      ).toFixed(1);\n\n      return { ...team, players, avgPPG, avgRPG, avgAPG };\n    });\n\n    const stats = {\n      bestPPG: Math.max(\n        ...updatedDreamTeams.map((team) => parseFloat(team.avgPPG))\n      ),\n      worstPPG: Math.min(\n        ...updatedDreamTeams.map((team) => parseFloat(team.avgPPG))\n      ),\n      bestRPG: Math.max(\n        ...updatedDreamTeams.map((team) => parseFloat(team.avgRPG))\n      ),\n      worstRPG: Math.min(\n        ...updatedDreamTeams.map((team) => parseFloat(team.avgRPG))\n      ),\n      bestAPG: Math.max(\n        ...updatedDreamTeams.map((team) => parseFloat(team.avgAPG))\n      ),\n      worstAPG: Math.min(\n        ...updatedDreamTeams.map((team) => parseFloat(team.avgAPG))\n      ),\n    };\n\n    return {\n      updatedDreamTeams,\n      bestStats: {\n        bestPPG: stats.bestPPG.toFixed(1),\n        bestRPG: stats.bestRPG.toFixed(1),\n        bestAPG: stats.bestAPG.toFixed(1),\n      },\n      worstStats: {\n        worstPPG: stats.worstPPG.toFixed(1),\n        worstRPG: stats.worstRPG.toFixed(1),\n        worstAPG: stats.worstAPG.toFixed(1),\n      },\n    };\n  } catch (error) {\n    console.error('Error fetching dream teams:', error);\n    throw error;\n  }\n};\n\n/************************************ Fetch Basket Players ************************************/\nconst fetchBasketPlayers = async (user) => {\n  if (!user) {\n    console.error('User data is missing');\n    throw new Error('User data is missing');\n  }\n\n  try {\n    const response = await axios.get('/api/basket', {\n      headers: { Authorization: `Bearer ${user.token}` },\n      params: { user_id: user.fullName },\n    });\n    const basketPlayerIds = response.data.baskets.map(\n      (basket) => basket.player_id\n    );\n\n    const playersData = [];\n    Object.values(JsonData).forEach((conference) => {\n      Object.values(conference).forEach((division) => {\n        Object.values(division).forEach((team) => {\n          team.forEach((player) => {\n            if (basketPlayerIds.includes(player.id.toString())) {\n              playersData.push(player);\n            }\n          });\n        });\n      });\n    });\n\n    return playersData;\n  } catch (error) {\n    console.error('Error fetching basket players:', error);\n    throw error;\n  }\n};\n\n/************************************ Create DreamTeam ************************************/\nconst createDreamTeam = async (user, playerIds) => {\n  if (!user || !playerIds) {\n    console.error('User or player IDs data is missing');\n    throw new Error('User or player IDs data is missing');\n  }\n\n  try {\n    await axios.post(\n      '/api/dreamteam/add',\n      {\n        user_id: user.fullName,\n        player_ids: playerIds,\n      },\n      {\n        headers: { Authorization: `Bearer ${user.token}` },\n      }\n    );\n\n    await axios.post(\n      '/api/basket/clear',\n      { user_id: user.fullName },\n      {\n        headers: { Authorization: `Bearer ${user.token}` },\n      }\n    );\n\n    return 'Dream Team created successfully!';\n  } catch (error) {\n    console.error('Error creating Dream Team:', error);\n    throw error;\n  }\n};\n\nexport {\n  addToLikes,\n  removeFromLikes,\n  removeFromBasket,\n  addToBasket,\n  fetchLikedPlayers,\n  fetchAllDreamTeams,\n  fetchMyDreamTeams,\n  fetchBasketPlayers,\n  createDreamTeam,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}