{"ast":null,"code":"var _jsxFileName = \"/Users/omerpeled/Documents/GitHub/NBA/Frontend/src/pages/Home.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport PlayerList from '../components/PlayerList'; // Import PlayerList component\nimport styles from '../styles/Home.module.css';\nimport JsonData from '../data/FullData.json';\nimport teamsData from '../data/TeamData.json'; // Import the teams JSON file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = ({\n  user\n}) => {\n  _s();\n  const [allPlayers, setAllPlayers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const getPlayers = () => {\n      try {\n        const playersData = [];\n        for (const conference of Object.values(JsonData)) {\n          for (const division of Object.values(conference)) {\n            for (const [teamName, teamPlayers] of Object.entries(division)) {\n              const team = teamsData.teams.find(t => t.name === teamName);\n              if (team) {\n                teamPlayers.forEach(player => {\n                  player.teamId = team.id;\n                  player.team = teamName;\n                  playersData.push(player);\n                });\n              }\n            }\n          }\n        }\n        setAllPlayers(playersData);\n      } catch (error) {\n        console.error('Error loading players:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getPlayers();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.appContainer,\n    children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading players...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(PlayerList, {\n      allPlayers: allPlayers,\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"GziJkp0wjhBGjWQlEOgz1cpjn+k=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","PlayerList","styles","JsonData","teamsData","jsxDEV","_jsxDEV","Home","user","_s","allPlayers","setAllPlayers","loading","setLoading","getPlayers","playersData","conference","Object","values","division","teamName","teamPlayers","entries","team","teams","find","t","name","forEach","player","teamId","id","push","error","console","className","appContainer","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/omerpeled/Documents/GitHub/NBA/Frontend/src/pages/Home.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PlayerList from '../components/PlayerList'; // Import PlayerList component\nimport styles from '../styles/Home.module.css';\nimport JsonData from '../data/FullData.json';\nimport teamsData from '../data/TeamData.json'; // Import the teams JSON file\n\nconst Home = ({ user }) => {\n  const [allPlayers, setAllPlayers] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const getPlayers = () => {\n      try {\n        const playersData = [];\n        for (const conference of Object.values(JsonData)) {\n          for (const division of Object.values(conference)) {\n            for (const [teamName, teamPlayers] of Object.entries(division)) {\n              const team = teamsData.teams.find((t) => t.name === teamName);\n              if (team) {\n                teamPlayers.forEach((player) => {\n                  player.teamId = team.id;\n                  player.team = teamName;\n                  playersData.push(player);\n                });\n              }\n            }\n          }\n        }\n        setAllPlayers(playersData);\n      } catch (error) {\n        console.error('Error loading players:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getPlayers();\n  }, []);\n\n  return (\n    <div className={styles.appContainer}>\n      {loading ? (\n        <p>Loading players...</p>\n      ) : (\n        <PlayerList allPlayers={allPlayers} user={user} />\n      )}\n    </div>\n  );\n};\n\nexport default Home;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,0BAA0B,CAAC,CAAC;AACnD,OAAOC,MAAM,MAAM,2BAA2B;AAC9C,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,SAAS,MAAM,uBAAuB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,IAAI,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACzB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMe,UAAU,GAAGA,CAAA,KAAM;MACvB,IAAI;QACF,MAAMC,WAAW,GAAG,EAAE;QACtB,KAAK,MAAMC,UAAU,IAAIC,MAAM,CAACC,MAAM,CAACf,QAAQ,CAAC,EAAE;UAChD,KAAK,MAAMgB,QAAQ,IAAIF,MAAM,CAACC,MAAM,CAACF,UAAU,CAAC,EAAE;YAChD,KAAK,MAAM,CAACI,QAAQ,EAAEC,WAAW,CAAC,IAAIJ,MAAM,CAACK,OAAO,CAACH,QAAQ,CAAC,EAAE;cAC9D,MAAMI,IAAI,GAAGnB,SAAS,CAACoB,KAAK,CAACC,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,IAAI,KAAKP,QAAQ,CAAC;cAC7D,IAAIG,IAAI,EAAE;gBACRF,WAAW,CAACO,OAAO,CAAEC,MAAM,IAAK;kBAC9BA,MAAM,CAACC,MAAM,GAAGP,IAAI,CAACQ,EAAE;kBACvBF,MAAM,CAACN,IAAI,GAAGH,QAAQ;kBACtBL,WAAW,CAACiB,IAAI,CAACH,MAAM,CAAC;gBAC1B,CAAC,CAAC;cACJ;YACF;UACF;QACF;QACAlB,aAAa,CAACI,WAAW,CAAC;MAC5B,CAAC,CAAC,OAAOkB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD,CAAC,SAAS;QACRpB,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IACDC,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACER,OAAA;IAAK6B,SAAS,EAAEjC,MAAM,CAACkC,YAAa;IAAAC,QAAA,EACjCzB,OAAO,gBACNN,OAAA;MAAA+B,QAAA,EAAG;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAEzBnC,OAAA,CAACL,UAAU;MAACS,UAAU,EAAEA,UAAW;MAACF,IAAI,EAAEA;IAAK;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAClD;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAChC,EAAA,CAzCIF,IAAI;AAAAmC,EAAA,GAAJnC,IAAI;AA2CV,eAAeA,IAAI;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}